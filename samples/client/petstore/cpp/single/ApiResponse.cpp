/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * v1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *
 * Example: openapi-generator-cli generate -i openapi.yaml -g cpp-single -o src/cpp/client-single
 *
 * DO NOT edit these files manually.
 */


#include "ApiResponse.h"

using namespace SingleCppClient;

ApiResponse::ApiResponse()
{
    code = int(0);
    type = std::string();
    message = std::string();
}

ApiResponse::ApiResponse(std::string jsonString)
{
    this->fromJson(jsonString);
}

ApiResponse::~ApiResponse()
{
}

void ApiResponse::fromJson(std::string jsonObj)
{
    nlohmann::json object = nlohmann::json::parse(jsonObj);
    const char *codeKey = "code";

    if (object.contains(codeKey))
    {
        nlohmann::json value = object[codeKey];
        jsonToValue(&code, value, "int");

    }

    const char *typeKey = "type";

    if (object.contains(typeKey))
    {
        nlohmann::json value = object[typeKey];
        jsonToValue(&type, value, "std::string");

    }

    const char *messageKey = "message";

    if (object.contains(messageKey))
    {
        nlohmann::json value = object[messageKey];
        jsonToValue(&message, value, "std::string");

    }

}

nlohmann::json ApiResponse::toJson()
{
    nlohmann::json object = nlohmann::json::object();
    object["code"] = getCode();
    object["type"] = getType();
    object["message"] = getMessage();
    return object;
}

 int ApiResponse::getCode()
{
    return code;
}

void ApiResponse::setCode(int  code)
{
    this->code = code;
}

 std::string ApiResponse::getType()
{
    return type;
}

void ApiResponse::setType(std::string  type)
{
    this->type = type;
}

 std::string ApiResponse::getMessage()
{
    return message;
}

void ApiResponse::setMessage(std::string  message)
{
    this->message = message;
}

