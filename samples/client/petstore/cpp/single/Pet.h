/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * v1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *
 * Example: openapi-generator-cli generate -i openapi.yaml -g cpp-single -o src/cpp/client-single
 *
 * DO NOT edit these files manually.
 */

/*
 * Pet.h
 *
 * A pet for sale in the pet store
 */

#ifndef SINGLE_CPP_CLIENT_Pet_H_
#define SINGLE_CPP_CLIENT_Pet_H_


#include <string>
#include "json.hpp"
#include "Helpers.h"
#include "Category.h"
#include "Tag.h"
#include <list>

namespace SingleCppClient {


class Pet {
public:

    /* Constructors */
    Pet();
    Pet(std::string jsonString);

    /* Destructor */
    virtual ~Pet();

    /* Retrieve a JSON representation of this class */
    nlohmann::json toJson();

    /* Fills in members of this class from the JSON object representing it */
    void fromJson(std::string jsonObj);

    /* Get  */
    long getId();
    /* Get  */
    Category getCategory();
    /* Get  */
    std::string getName();
    /* Get  */
    std::list<std::string> getPhotoUrls();
    /* Get  */
    std::list<Tag> getTags();
    /* Get pet status in the store */
    std::string getStatus();

    /* Set  */
    void setId(long  id);
    /* Set  */
    void setCategory(Category  category);
    /* Set  */
    void setName(std::string  name);
    /* Set  */
    void setPhotoUrls(std::list <std::string> photoUrls);
    /* Set  */
    void setTags(std::list <Tag> tags);
    /* Set pet status in the store */
    void setStatus(std::string  status);

private:
    long id{};
    Category category;
    std::string name{};
    std::list<std::string> photoUrls;
    std::list<Tag> tags;
    std::string status{};
};
}

#endif /* SINGLE_CPP_CLIENT_Pet_H_ */
